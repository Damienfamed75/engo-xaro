// Code generated by protoc-gen-go. DO NOT EDIT.
// source: engo-xaro.proto

package engoxaro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The response message containing the greetings
type ServerMessage struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerMessage) Reset()         { *m = ServerMessage{} }
func (m *ServerMessage) String() string { return proto.CompactTextString(m) }
func (*ServerMessage) ProtoMessage()    {}
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_engo_xaro_5b780acb17b1fd55, []int{0}
}
func (m *ServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerMessage.Unmarshal(m, b)
}
func (m *ServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerMessage.Marshal(b, m, deterministic)
}
func (dst *ServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerMessage.Merge(dst, src)
}
func (m *ServerMessage) XXX_Size() int {
	return xxx_messageInfo_ServerMessage.Size(m)
}
func (m *ServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServerMessage proto.InternalMessageInfo

func (m *ServerMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Point struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_engo_xaro_5b780acb17b1fd55, []int{1}
}
func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (dst *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(dst, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Players struct {
	Players              map[uint32]*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Players) Reset()         { *m = Players{} }
func (m *Players) String() string { return proto.CompactTextString(m) }
func (*Players) ProtoMessage()    {}
func (*Players) Descriptor() ([]byte, []int) {
	return fileDescriptor_engo_xaro_5b780acb17b1fd55, []int{2}
}
func (m *Players) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Players.Unmarshal(m, b)
}
func (m *Players) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Players.Marshal(b, m, deterministic)
}
func (dst *Players) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Players.Merge(dst, src)
}
func (m *Players) XXX_Size() int {
	return xxx_messageInfo_Players.Size(m)
}
func (m *Players) XXX_DiscardUnknown() {
	xxx_messageInfo_Players.DiscardUnknown(m)
}

var xxx_messageInfo_Players proto.InternalMessageInfo

func (m *Players) GetPlayers() map[uint32]*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type Player struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	ID                   uint32   `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	IP                   string   `protobuf:"bytes,3,opt,name=IP,proto3" json:"IP,omitempty"`
	Position             *Point   `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_engo_xaro_5b780acb17b1fd55, []int{3}
}
func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (dst *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(dst, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Player) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Player) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *Player) GetPosition() *Point {
	if m != nil {
		return m.Position
	}
	return nil
}

type JoinMessage struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Newid                uint32   `protobuf:"varint,2,opt,name=newid,proto3" json:"newid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinMessage) Reset()         { *m = JoinMessage{} }
func (m *JoinMessage) String() string { return proto.CompactTextString(m) }
func (*JoinMessage) ProtoMessage()    {}
func (*JoinMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_engo_xaro_5b780acb17b1fd55, []int{4}
}
func (m *JoinMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinMessage.Unmarshal(m, b)
}
func (m *JoinMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinMessage.Marshal(b, m, deterministic)
}
func (dst *JoinMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinMessage.Merge(dst, src)
}
func (m *JoinMessage) XXX_Size() int {
	return xxx_messageInfo_JoinMessage.Size(m)
}
func (m *JoinMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinMessage.DiscardUnknown(m)
}

var xxx_messageInfo_JoinMessage proto.InternalMessageInfo

func (m *JoinMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *JoinMessage) GetNewid() uint32 {
	if m != nil {
		return m.Newid
	}
	return 0
}

type PlayerLeft struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerLeft) Reset()         { *m = PlayerLeft{} }
func (m *PlayerLeft) String() string { return proto.CompactTextString(m) }
func (*PlayerLeft) ProtoMessage()    {}
func (*PlayerLeft) Descriptor() ([]byte, []int) {
	return fileDescriptor_engo_xaro_5b780acb17b1fd55, []int{5}
}
func (m *PlayerLeft) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerLeft.Unmarshal(m, b)
}
func (m *PlayerLeft) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerLeft.Marshal(b, m, deterministic)
}
func (dst *PlayerLeft) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerLeft.Merge(dst, src)
}
func (m *PlayerLeft) XXX_Size() int {
	return xxx_messageInfo_PlayerLeft.Size(m)
}
func (m *PlayerLeft) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerLeft.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerLeft proto.InternalMessageInfo

func (m *PlayerLeft) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PlayerJoined struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerJoined) Reset()         { *m = PlayerJoined{} }
func (m *PlayerJoined) String() string { return proto.CompactTextString(m) }
func (*PlayerJoined) ProtoMessage()    {}
func (*PlayerJoined) Descriptor() ([]byte, []int) {
	return fileDescriptor_engo_xaro_5b780acb17b1fd55, []int{6}
}
func (m *PlayerJoined) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerJoined.Unmarshal(m, b)
}
func (m *PlayerJoined) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerJoined.Marshal(b, m, deterministic)
}
func (dst *PlayerJoined) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerJoined.Merge(dst, src)
}
func (m *PlayerJoined) XXX_Size() int {
	return xxx_messageInfo_PlayerJoined.Size(m)
}
func (m *PlayerJoined) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerJoined.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerJoined proto.InternalMessageInfo

func (m *PlayerJoined) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerJoined) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func init() {
	proto.RegisterType((*ServerMessage)(nil), "engoxaro.ServerMessage")
	proto.RegisterType((*Point)(nil), "engoxaro.Point")
	proto.RegisterType((*Players)(nil), "engoxaro.Players")
	proto.RegisterMapType((map[uint32]*Player)(nil), "engoxaro.Players.PlayersEntry")
	proto.RegisterType((*Player)(nil), "engoxaro.Player")
	proto.RegisterType((*JoinMessage)(nil), "engoxaro.JoinMessage")
	proto.RegisterType((*PlayerLeft)(nil), "engoxaro.PlayerLeft")
	proto.RegisterType((*PlayerJoined)(nil), "engoxaro.PlayerJoined")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// XaroClient is the client API for Xaro service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XaroClient interface {
	// send the player who joined
	UserJoined(ctx context.Context, in *Player, opts ...grpc.CallOption) (*JoinMessage, error)
	// send the player who left
	UserLeft(ctx context.Context, in *Player, opts ...grpc.CallOption) (*ServerMessage, error)
	// send your position and receive every position of players
	SendPlayerData(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Players, error)
}

type xaroClient struct {
	cc *grpc.ClientConn
}

func NewXaroClient(cc *grpc.ClientConn) XaroClient {
	return &xaroClient{cc}
}

func (c *xaroClient) UserJoined(ctx context.Context, in *Player, opts ...grpc.CallOption) (*JoinMessage, error) {
	out := new(JoinMessage)
	err := c.cc.Invoke(ctx, "/engoxaro.Xaro/UserJoined", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xaroClient) UserLeft(ctx context.Context, in *Player, opts ...grpc.CallOption) (*ServerMessage, error) {
	out := new(ServerMessage)
	err := c.cc.Invoke(ctx, "/engoxaro.Xaro/UserLeft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xaroClient) SendPlayerData(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Players, error) {
	out := new(Players)
	err := c.cc.Invoke(ctx, "/engoxaro.Xaro/SendPlayerData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XaroServer is the server API for Xaro service.
type XaroServer interface {
	// send the player who joined
	UserJoined(context.Context, *Player) (*JoinMessage, error)
	// send the player who left
	UserLeft(context.Context, *Player) (*ServerMessage, error)
	// send your position and receive every position of players
	SendPlayerData(context.Context, *Player) (*Players, error)
}

func RegisterXaroServer(s *grpc.Server, srv XaroServer) {
	s.RegisterService(&_Xaro_serviceDesc, srv)
}

func _Xaro_UserJoined_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XaroServer).UserJoined(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engoxaro.Xaro/UserJoined",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XaroServer).UserJoined(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xaro_UserLeft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XaroServer).UserLeft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engoxaro.Xaro/UserLeft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XaroServer).UserLeft(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xaro_SendPlayerData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XaroServer).SendPlayerData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engoxaro.Xaro/SendPlayerData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XaroServer).SendPlayerData(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

var _Xaro_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engoxaro.Xaro",
	HandlerType: (*XaroServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserJoined",
			Handler:    _Xaro_UserJoined_Handler,
		},
		{
			MethodName: "UserLeft",
			Handler:    _Xaro_UserLeft_Handler,
		},
		{
			MethodName: "SendPlayerData",
			Handler:    _Xaro_SendPlayerData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "engo-xaro.proto",
}

func init() { proto.RegisterFile("engo-xaro.proto", fileDescriptor_engo_xaro_5b780acb17b1fd55) }

var fileDescriptor_engo_xaro_5b780acb17b1fd55 = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x51, 0x8b, 0x13, 0x31,
	0x10, 0xbe, 0xa4, 0xd7, 0x6b, 0x9d, 0xde, 0xde, 0x9d, 0x41, 0x71, 0x2d, 0x22, 0x47, 0x04, 0xa9,
	0xa8, 0xfb, 0x50, 0x1f, 0x5a, 0x0a, 0xbe, 0x94, 0xf6, 0xa1, 0x52, 0x61, 0xd9, 0x22, 0xf8, 0x1a,
	0xdd, 0xb8, 0x04, 0xdb, 0x64, 0xcd, 0x6e, 0xeb, 0xee, 0xcf, 0xf0, 0xa7, 0xf8, 0x0f, 0x25, 0xc9,
	0xa6, 0xad, 0xad, 0xe0, 0x53, 0xf2, 0xcd, 0x7c, 0x33, 0xdf, 0x7c, 0xc3, 0xc0, 0x2d, 0x97, 0x99,
	0x7a, 0x5b, 0x31, 0xad, 0xa2, 0x5c, 0xab, 0x52, 0x91, 0xae, 0x09, 0x18, 0x4c, 0x5f, 0x41, 0xb0,
	0xe2, 0x7a, 0xc7, 0xf5, 0x47, 0x5e, 0x14, 0x2c, 0xe3, 0x24, 0x84, 0xce, 0xc6, 0x7d, 0x43, 0x74,
	0x8f, 0x06, 0x0f, 0x12, 0x0f, 0xe9, 0x0b, 0x68, 0xc7, 0x4a, 0xc8, 0x92, 0x5c, 0x03, 0xaa, 0x6c,
	0x12, 0x27, 0xa8, 0x32, 0xa8, 0x0e, 0xb1, 0x43, 0x35, 0xfd, 0x85, 0xa0, 0x13, 0xaf, 0x59, 0xcd,
	0x75, 0x41, 0xc6, 0xd0, 0xc9, 0xdd, 0x37, 0x44, 0xf7, 0xad, 0x41, 0x6f, 0xf8, 0x3c, 0xf2, 0xba,
	0x51, 0xc3, 0xf1, 0xef, 0x5c, 0x96, 0xba, 0x4e, 0x3c, 0xbd, 0xbf, 0x84, 0xeb, 0xe3, 0x04, 0xb9,
	0x83, 0xd6, 0x77, 0x5e, 0x5b, 0xcd, 0x20, 0x31, 0x5f, 0xf2, 0x12, 0xda, 0x3b, 0xb6, 0xde, 0x72,
	0xab, 0xdc, 0x1b, 0xde, 0x9d, 0x76, 0x4e, 0x5c, 0x7a, 0x82, 0xc7, 0x88, 0xfe, 0x80, 0x2b, 0x17,
	0x24, 0x7d, 0xe8, 0x7e, 0x2a, 0xb8, 0x96, 0x6c, 0xe3, 0xdd, 0xed, 0x31, 0xb9, 0x01, 0xbc, 0x98,
	0xd9, 0x76, 0x41, 0x82, 0x17, 0x33, 0x8b, 0xe3, 0xb0, 0x65, 0x59, 0x78, 0x11, 0x93, 0xd7, 0xd0,
	0xcd, 0x55, 0x21, 0x4a, 0xa1, 0x64, 0x78, 0x69, 0x45, 0x6f, 0x8f, 0x44, 0xcd, 0x62, 0x92, 0x3d,
	0x81, 0xbe, 0x87, 0xde, 0x07, 0x25, 0xe4, 0x7f, 0x97, 0x4a, 0x1e, 0x41, 0x5b, 0xf2, 0x9f, 0x22,
	0x6d, 0x84, 0x1d, 0xa0, 0xcf, 0x00, 0xdc, 0xc4, 0x4b, 0xfe, 0xad, 0x34, 0x93, 0x88, 0xb4, 0x31,
	0x8f, 0x45, 0x4a, 0x27, 0x7e, 0x3b, 0x46, 0x82, 0xa7, 0xa7, 0x79, 0xe3, 0x72, 0xeb, 0x5d, 0x62,
	0xe7, 0xd2, 0xe3, 0xe1, 0x6f, 0x04, 0x97, 0x9f, 0x99, 0x56, 0x64, 0x04, 0x60, 0xac, 0x37, 0x2d,
	0xce, 0xf6, 0xd7, 0x7f, 0x7c, 0x88, 0x1c, 0x39, 0xa1, 0x17, 0x64, 0xe4, 0x76, 0x68, 0x27, 0x3b,
	0x2f, 0x7b, 0x72, 0x88, 0xfc, 0x75, 0x57, 0xb6, 0xf0, 0x66, 0xc5, 0x65, 0xea, 0x88, 0x33, 0x56,
	0xb2, 0x7f, 0x94, 0x3f, 0x3c, 0xbb, 0x10, 0x7a, 0x31, 0x7d, 0x03, 0x4f, 0x85, 0x8a, 0x32, 0x9d,
	0x7f, 0x8d, 0x78, 0xc5, 0x36, 0xf9, 0x9a, 0x17, 0x7b, 0xda, 0x34, 0x98, 0xcb, 0x4c, 0x19, 0x47,
	0xb1, 0xb9, 0xec, 0x18, 0x7d, 0xb9, 0xb2, 0x27, 0xfe, 0xee, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x83, 0x76, 0x96, 0xfc, 0xf5, 0x02, 0x00, 0x00,
}
